openapi: 3.0.0
info:
  title: test open v3 api spec
  version: '1.0'
  contact:
    name: Brian Watkins
    email: brian@watkins.com
servers:
  - url: 'http://my-fun-api.com'
paths:
  '/api/my/feeds/{feedId}/items/{feedItemId}/save':
    get:
      summary: Save Item
      operationId: save-item
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                Get Message:
                  value:
                    id: 142
                    message: Funny message
      description: 'Multiple path params'
    parameters:
      - schema:
          type: string
        name: feedId
        in: path
        required: true
      - schema:
          type: string
        name: feedItemId
        in: path
        required: true
  '/my/messages/{messageId}':
    parameters:
      - schema:
          type: number
        name: messageId
        in: path
        required: true
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                Get Message:
                  value:
                    id: 142
                    message: Funny message
        '404':
          description: Message Not Found
      operationId: get-users-userId
      description: Retrieve the message with the matching ID.
      parameters:
        - schema:
            type: integer
          in: header
          name: X-Fun-Times
          description: How many times to have fun?
          required: true
        - schema:
            type: integer
            minimum: 10
            maximum: 20
          in: query
          name: someValue
          description: Some value
          required: true
  /my/messages:
    post:
      summary: ''
      operationId: post-my-messages
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                minLength: 5
              description: URL for created message
            X-Fun-Times:
              schema:
                type: integer
              description: Number of Fun Times
      description: Create a message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        description: Message
  /my/text:
    get:
      summary: Get Text
      tags: []
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
      operationId: get-my-text
      description: get all the text that you need
components:
  schemas:
    Message:
      title: Message
      type: object
      properties:
        id:
          type: integer
        message:
          type: string
      required:
        - id
        - message
    MessageRequest:
      title: MessageRequest
      type: object
      properties:
        message:
          type: string
      required:
        - message
