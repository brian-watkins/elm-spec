swagger: '2.0'
info:
  title: test open api v2 spec
  version: '1.0'
host: fake-api.com
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
paths:
  '/api/my/feeds/{feedId}/items/{feedItemId}/save':
    parameters:
      - type: string
        name: feedId
        in: path
        required: true
        description: Id of the feed
      - type: string
        name: feedItemId
        in: path
        required: true
        description: Id of the feed item
    get:
      summary: Get Stuff
      tags: []
      responses:
        '200':
          description: Stuff Found
          schema:
            $ref: '#/definitions/Message'
          examples: {}
      operationId: get-stuff
      description: Retrieve the stuff with the matching ids
  '/my/messages/{messageId}':
    parameters:
      - type: number
        name: messageId
        in: path
        required: true
        description: Id of the message
    get:
      summary: Get Message
      tags: []
      responses:
        '200':
          description: User Found
          schema:
            $ref: '#/definitions/Message'
          examples: {}
        '404':
          description: User Not Found
          schema:
            type: 'null'
          examples: {}
      operationId: get-message
      description: Retrieve the message with the matching id
      parameters:
        - type: integer
          in: header
          name: X-Fun-Times
          description: How many times to have fun?
          required: true
        - type: integer
          in: query
          name: someValue
          description: Some value
          required: true
          minimum: 10
          maximum: 20
  /my/messages:
    post:
      summary: ''
      operationId: post-my-messages
      responses:
        '201':
          description: Created
          headers:
            Location:
              type: string
              description: URL for created message
              minLength: 5
            X-Fun-Times:
              type: integer
              description: Number of fun times
      description: Create a message
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/MessageRequest'
          description: Message
  /my/text:
    get:
      summary: Get text
      tags: []
      responses:
        '200':
          description: OK
          schema:
            type: string
          headers: {}
      operationId: get-my-text
      description: get all the text I could need
definitions:
  Message:
    title: Message
    type: object
    properties:
      id:
        type: integer
      message:
        type: string
    required:
      - id
      - message
  MessageRequest:
    title: MessageRequest
    type: object
    properties:
      message:
        type: string
    required:
      - message
